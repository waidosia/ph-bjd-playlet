name: Build, Package, and Release Python Project on Windows

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }

      - name: Run build script
        run: python build.py

      - name: Verify build output
        run: |
          if (!(Test-Path "your_build_folder")) {
            Write-Error "Build folder 'your_build_folder' does not exist."
            exit 1
          }

      - name: Compress build folder
        run: |
          $timestamp = Get-Date -Format "yyyyMMddHHmmss"
          $zipName = "package-$timestamp.zip"
          Compress-Archive -Path .\dist\* -DestinationPath .\package.zip -Force
          Write-Output "Compressed to package.zip"

      - name: Read version
        id: get_version
        run: |
          $version = Get-Content -Path .\version | Select-Object -First 1
          Write-Output "Version: $version"
          Write-Output "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            ### Release v${{ env.VERSION }}
            - 自动生成的 Release。
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./package.zip
          asset_name: package.zip
          asset_content_type: application/zip

      - name: Clean up
        run: Remove-Item -Path .\package.zip -Force
